{"version":3,"sources":["components/Footer.jsx","redux/actions/isAuth.js","components/Header.jsx","pages/About.jsx","pages/Home.jsx","redux/actions/posts.js","pages/Login.jsx","pages/FullPost.jsx","pages/NotFound.jsx","pages/Profile.jsx","pages/UpdatePost.jsx","App.js","redux/redusers/posts.js","redux/index.js","redux/redusers/isAuth.js","index.js"],"names":["Footer","className","isAuthTrue","type","isAuthFalse","Header","navigate","useNavigate","dispatch","useDispatch","pathname","useLocation","isAuth","useSelector","state","window","localStorage","getItem","to","Nav","variant","Item","Link","active","as","Button","onClick","confirm","removeItem","About","src","alt","Home","posts","Row","xs","md","map","post","Col","Card","id","Img","imageUrl","Body","Title","title","Text","discription","substr","date","createdAt","Date","toLocaleString","payload","removePost","Login","React","useState","email","password","fields","setFields","handleChangeInput","event","target","name","value","Form","onSubmit","preventDefault","axios","get","then","response","token","data","setItem","catch","error","alert","console","log","Group","controlId","Label","Control","onChange","autoComplete","FullPost","useParams","find","obj","Number","NotFound","Profile","addPost","onClickAddPost","UpdatePost","updatePost","onClickUpdatePost","App","useEffect","res","err","message","path","element","initialState","rootReduser","combineReducers","action","now","length","filter","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.68e24c55.chunk.js","sourcesContent":["export const Footer = () => {\n  return (\n    <div className='footer'>\n      <p>BlogReact (c) 2022</p>\n    </div>\n  );\n};\n","export const isAuthTrue = {\n  type: 'AUTH_TRUE',\n};\n\nexport const isAuthFalse = {\n  type: 'AUTH_FALSE',\n};\n","import React from 'react';\nimport { Nav, Button } from 'react-bootstrap';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { isAuthFalse, isAuthTrue } from '../redux/actions/isAuth';\n\nexport const Header = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const isAuth = useSelector((state) => state.isAuth);\n\n  if (window.localStorage.getItem('token')) {\n    !isAuth && dispatch(isAuthTrue);\n  }\n\n  const handleClickAuth = () => {\n    if (window.confirm('Вы действительно хотите выйти?')) {\n      window.localStorage.removeItem('token');\n      navigate('/');\n      dispatch(isAuthFalse);\n    }\n  };\n\n  return (\n    <div className='header'>\n      <Link to='/'>\n        <h1>BlogReact</h1>\n      </Link>\n      <Nav variant='pills'>\n        <Nav.Item>\n          <Nav.Link active={pathname === '/'} to='/' as={Link}>\n            Главная\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link active={pathname === '/about'} to='/about' as={Link}>\n            Обо мне\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          {isAuth ? (\n            <Nav.Link active={pathname === '/profile'} to='/profile' as={Link}>\n              Админка\n            </Nav.Link>\n          ) : (\n            <Nav.Link active={pathname === '/login'} to='/login' as={Link}>\n              Войти\n            </Nav.Link>\n          )}\n        </Nav.Item>\n        {isAuth && (\n          <Button onClick={handleClickAuth} className='buttonLogout' variant='danger'>\n            Выйти\n          </Button>\n        )}\n      </Nav>\n    </div>\n  );\n};\n","export const About = () => {\n  return (\n    <>\n      <img\n        className='imgAbout'\n        src='https://cs10.pikabu.ru/post_img/2019/06/07/7/1559905588140454390.jpg'\n        alt='победитель'\n      />\n      <h2>Страница об авторе</h2>\n      <p>Автор просто лучший чувак на свете, ведь именно он научился и сделал этот блог!</p>\n    </>\n  );\n};\n","import { Row, Col, Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { removePost } from '../redux/actions/posts';\n\nexport const Home = () => {\n  const dispatch = useDispatch();\n\n  const posts = useSelector((state) => state.posts);\n  const isAuth = useSelector((state) => state.isAuth);\n\n  const formatDate = (date) => {\n    const newDate = new Date(date);\n    const dateFormatRu = newDate.toLocaleString('ru');\n    return dateFormatRu;\n  };\n\n  const onClickRemovePost = (id) => {\n    if (window.confirm(`Удалить статью №${id}?`)) {\n      dispatch(removePost(id));\n    }\n  };\n\n  return (\n    <Row xs={1} md={2} className='g-4'>\n      {posts &&\n        posts.map((post) => (\n          <Col key={post.id}>\n            <Card>\n              <Link to={`/post/${post.id}`}>\n                <Card.Img variant='top' src={post.imageUrl} alt={post.imageUrl} />\n                <Card.Body>\n                  <Card.Title>{post.title}</Card.Title>\n                  <Card.Text>{post.discription.substr(0, 70)} ...</Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <small className='text-muted'>Опубликовано: {formatDate(post.createdAt)}</small>\n                </Card.Footer>\n              </Link>\n              {isAuth && (\n                <div className='adminButtons'>\n                  <Link to={`/updatepost/${post.id}`}>\n                    <Button variant='warning'>Изменить статью</Button>\n                  </Link>\n                  <Button onClick={() => onClickRemovePost(post.id)} variant='danger'>\n                    Удалить статью\n                  </Button>\n                </div>\n              )}\n            </Card>\n          </Col>\n        ))}\n    </Row>\n  );\n};\n","import axios from 'axios';\n\nexport const addPost = (fields) => ({\n  type: 'ADD_POST',\n  payload: fields,\n});\n\nexport const removePost = (id) => ({\n  type: 'REMOVE_POST',\n  payload: id,\n});\n\nexport const updatePost = (fields) => ({\n  type: 'UPDATE_POST',\n  payload: fields,\n});\n\nexport const getPosts = () => (dispatch) => {\n  axios\n    .get('https://6245592d7701ec8f725097cb.mockapi.io/posts')\n    .then((res) => {\n      dispatch({\n        type: 'ADD_START_POSTS',\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(err.message);\n    });\n};\n","import React from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Login = () => {\n  const [fields, setFields] = React.useState({\n    email: 'test@test.ru',\n    password: '123456',\n  });\n\n  const navigate = useNavigate();\n\n  const handleChangeInput = (event) => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    axios\n      .get(\n        `https://mentor.archakov.im/api/mock/login?email=${fields.email}&password=${fields.password}`,\n      )\n      .then((response) => {\n        navigate('/profile');\n        const token = response.data.token;\n        window.localStorage.setItem('token', token);\n      })\n      .catch((error) => {\n        alert('Ошибка авторизации');\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className='loginForm'>\n      <Form onSubmit={onSubmit}>\n        <Form.Group className='mb-3' controlId='formBasicEmail'>\n          <Form.Label>E-mail</Form.Label>\n          <Form.Control\n            name='email'\n            onChange={handleChangeInput}\n            type='email'\n            value={fields.email}\n          />\n        </Form.Group>\n\n        <Form.Group className='mb-3' controlId='formBasicPassword'>\n          <Form.Label>Пароль</Form.Label>\n          <Form.Control\n            name='password'\n            onChange={handleChangeInput}\n            type='password'\n            value={fields.password}\n            autoComplete='off'\n          />\n        </Form.Group>\n\n        <Button variant='primary' type='submit'>\n          Войти\n        </Button>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link, Navigate, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport const FullPost = () => {\n  const posts = useSelector((state) => state.posts);\n\n  const { id } = useParams();\n\n  const post = posts.find((obj) => obj.id === Number(id));\n\n  if (!post) {\n    return <Navigate to='/' />;\n  }\n\n  return (\n    <div className='fullPost'>\n      <h2>{post.title}</h2>\n      <img className='imgPost' src={post.imageUrl} alt='красота' />\n      <p className='descPost'>{post.discription}</p>\n      <Link to='/'>\n        <Button>Назад</Button>\n      </Link>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nexport const NotFound = () => {\n  return (\n    <div className='fullPost'>\n      <h2>Ничего не найдено :(</h2>\n      <p className='descPost'>К сожалению у нас нет такой страницы, вернитесь на главную</p>\n      <Link to='/'>\n        <Button>На главную</Button>\n      </Link>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { addPost } from '../redux/actions/posts';\n\nexport const Profile = () => {\n  const dispatch = useDispatch();\n\n  const [fields, setFields] = React.useState({\n    title: '',\n    imageUrl: '',\n    discription: '',\n  });\n\n  if (!window.localStorage.getItem('token')) {\n    return <Navigate to='/' />;\n  }\n\n  const handleChangeInput = (event) => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const onClickAddPost = (fields) => {\n    dispatch(addPost(fields));\n    alert('Статья успешно добавлена!');\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    onClickAddPost(fields);\n    setFields({\n      title: '',\n      imageUrl: '',\n      discription: '',\n    });\n  };\n\n  return (\n    <>\n      <h3>Это страница администратора</h3>\n      <h4>Здесь Вы можете добавить новую статью</h4>\n      <div className='addNewPostForm'>\n        <Form onSubmit={onSubmit}>\n          <Form.Group className='mb-3' controlId='formBasicText'>\n            <Form.Label>Заголовок статьи</Form.Label>\n            <Form.Control\n              name='title'\n              onChange={handleChangeInput}\n              type='text'\n              value={fields.title}\n            />\n          </Form.Group>\n\n          <Form.Group className='mb-3' controlId='formBasicText'>\n            <Form.Label>Ссылка на картинку 800х600</Form.Label>\n            <Form.Control\n              name='imageUrl'\n              onChange={handleChangeInput}\n              type='text'\n              value={fields.imageUrl}\n            />\n          </Form.Group>\n\n          <Form.Group className='mb-3' controlId='formBasicText'>\n            <Form.Label>Текст статьи</Form.Label>\n            <Form.Control\n              as='textarea'\n              name='discription'\n              onChange={handleChangeInput}\n              type='text'\n              value={fields.discription}\n            />\n          </Form.Group>\n\n          <Button variant='primary' type='submit'>\n            Добавить новую статью\n          </Button>\n        </Form>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Navigate, useParams, useNavigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updatePost } from '../redux/actions/posts';\n\nexport const UpdatePost = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const posts = useSelector((state) => state.posts);\n\n  const post = posts.find((obj) => obj.id === Number(id));\n\n  const [fields, setFields] = React.useState({\n    id: post.id,\n    title: post.title,\n    imageUrl: post.imageUrl,\n    discription: post.discription,\n  });\n\n  if (!window.localStorage.getItem('token')) {\n    return <Navigate to='/' />;\n  }\n\n  const handleChangeInput = (event) => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const onClickUpdatePost = (fields) => {\n    if (window.confirm(`Сохранить изменения в статье №${fields.id}?`)) {\n      dispatch(updatePost(fields));\n      alert('Статья успешно обновлена!');\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    onClickUpdatePost(fields);\n    navigate('/');\n  };\n\n  return (\n    <>\n      <h3>Это страница администратора</h3>\n      <h4>Здесь Вы можете внести изменения в статью</h4>\n      <div className='addNewPostForm'>\n        <Form onSubmit={onSubmit}>\n          <Form.Group className='mb-3' controlId='formBasicText'>\n            <Form.Label>Заголовок статьи</Form.Label>\n            <Form.Control\n              name='title'\n              onChange={handleChangeInput}\n              type='text'\n              value={fields.title}\n            />\n          </Form.Group>\n\n          <Form.Group className='mb-3' controlId='formBasicText'>\n            <Form.Label>Ссылка на картинку 800х600</Form.Label>\n            <Form.Control\n              name='imageUrl'\n              onChange={handleChangeInput}\n              type='text'\n              value={fields.imageUrl}\n            />\n          </Form.Group>\n\n          <Form.Group className='mb-3' controlId='formBasicText'>\n            <Form.Label>Текст статьи</Form.Label>\n            <Form.Control\n              as='textarea'\n              name='discription'\n              onChange={handleChangeInput}\n              type='text'\n              value={fields.discription}\n            />\n          </Form.Group>\n\n          <Button variant='primary' type='submit'>\n            Сохранить изменения в статье\n          </Button>\n        </Form>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { Footer } from './components/Footer';\nimport { Header } from './components/Header';\nimport { About } from './pages/About';\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Login';\nimport { FullPost } from './pages/FullPost';\nimport { NotFound } from './pages/NotFound';\nimport { Profile } from './pages/Profile';\nimport { UpdatePost } from './pages/UpdatePost';\nimport { getPosts } from './redux/actions/posts';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(getPosts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/about' element={<About />} />\n        <Route path='/login' element={<Login />} />\n        <Route path='/profile' element={<Profile />} />\n        <Route path='/post/:id' element={<FullPost />} />\n        <Route path='/updatepost/:id' element={<UpdatePost />} />\n        <Route path='*' element={<NotFound />} />\n      </Routes>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const initialState = [];\n\nexport function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_START_POSTS':\n      return action.payload;\n\n    case 'ADD_POST':\n      return [\n        ...state,\n        {\n          createdAt: Date.now(),\n          title: action.payload.title,\n          imageUrl: action.payload.imageUrl,\n          discription: action.payload.discription,\n          id: state[state.length - 1].id + 1,\n        },\n      ];\n\n    case 'REMOVE_POST':\n      return state.filter((obj) => obj.id !== action.payload);\n\n    case 'UPDATE_POST':\n      return state.map((obj) =>\n        obj.id === action.payload.id\n          ? {\n              ...obj,\n              title: action.payload.title,\n              imageUrl: action.payload.imageUrl,\n              discription: action.payload.discription,\n            }\n          : obj,\n      );\n\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { postsReducer } from './redusers/posts';\nimport { isAuthReduser } from './redusers/isAuth';\n\nconst rootReduser = combineReducers({\n  posts: postsReducer,\n  isAuth: isAuthReduser,\n});\n\nconst store = createStore(rootReduser, applyMiddleware(thunk));\n\nexport default store;\n","const initialState = false;\n\nexport function isAuthReduser(state = initialState, action) {\n  switch (action.type) {\n    case 'AUTH_TRUE':\n      return (state = true);\n    case 'AUTH_FALSE':\n      return (state = false);\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.scss';\nimport App from './App';\nimport store from './redux';\n\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\nroot.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n);\n"],"sourceRoot":""}